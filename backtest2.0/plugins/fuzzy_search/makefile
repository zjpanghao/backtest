# Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.


# Where to find user code.

LIB_DIR = ../../../mylib
USER_DIR = ./../../pub
SO_DIR = ./../../bin/plugins
CORE_PATH = ../../../basecore
THIRD_PATH = $(LIB_DIR)/public

CUSTOM_THIRD_PATH = $(LIB_DIR)/third_party

LINK_PATHS = -L./ -L $(SO_DIR)/../back_share -L/usr/local/libmemcached-1.0.7/lib/  -L/usr/lib64/mysql -L$(CUSTOM_THIRD_PATH)/librdkafka -Wl,-rpath=back_share

# Flags passed to the preprocessor.
CPPFLAGS += -isystem -shared -fPIC -D_DB_POOL_ -D_DEBUG -DUSR_LOG_MSG\
	-D_DIC_POOL_ -D_REENTRANT -D_GNU_SOURCE -DUSR_LOG_ERROR -DUSR_LOG_MSG\
	-DPROCESS_WORK -DHEAD_SHORT -Wall

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread -shared -fPIC 

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
PLUGIN = $(SO_DIR)/fuzzy_search/fuzzy_search.so
                
INCLUDE_PATHS = -I/usr/local/libmemcached-1.0.7/include \
				-I$(LIB_DIR)/ \
				-I$(CORE_PATH)/ \
				-I$(LIB_DIR)/\
				-I$(THIRD_PATH)\
				-I/usr/local/include\
				-I/usr/include/mysql\
				-I$(USER_DIR)\
				-I$(CUSTOM_THIRD_PATH)/hiredis\
				-I$(CUSTOM_THIRD_PATH)\
				-I$(LIB_DIR)/base\
				-I$(CUSTOM_THIRD_PATH)/librdkafka/src\
                -I$(USER_DIR)\
				-I../\
				


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(PLUGIN)

clean :
	rm -f $(PLUGIN)  *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
#GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
#gtest-all.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

#gtest_main.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

#gtest.a : gtest-all.o
#	$(AR) $(ARFLAGS) $@ $^

#gtest_main.a : gtest-all.o gtest_main.o
#	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.


fuzzy_search_init.o : ./fuzzy_search_init.cc ./fuzzy_search_init.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_init.cc $(INCLUDE_PATHS)
fuzzy_search_test.o : ./test/fuzzy_search_test.cc ./test/fuzzy_search_test.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./test/fuzzy_search_test.cc $(INCLUDE_PATHS)

fuzzy_search_logic.o : ./fuzzy_search_logic.cc ./fuzzy_search_logic.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_logic.cc $(INCLUDE_PATHS)
	
fuzzy_search_factory.o : ./fuzzy_search_factory.cc ./fuzzy_search_factory.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_factory.cc $(INCLUDE_PATHS)
fuzzy_search_parser.o : ./fuzzy_search_parser.cc ./fuzzy_search_parser.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_parser.cc $(INCLUDE_PATHS)
fuzzy_search_match.o : ./fuzzy_search_match.cc ./fuzzy_search_match.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_match.cc $(INCLUDE_PATHS)
fuzzy_search_handle.o : ./fuzzy_search_handle.cc ./fuzzy_search_handle.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_handle.cc $(INCLUDE_PATHS)
fuzzy_search_engine.o : ./fuzzy_search_engine.cc ./fuzzy_search_engine.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_engine.cc $(INCLUDE_PATHS)
fuzzy_sentence_view.o : ./fuzzy_sentence_view.cc ./fuzzy_sentence_view.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_sentence_view.cc $(INCLUDE_PATHS)
fuzzy_search_packet_process.o : ./fuzzy_search_packet_process.cc ./fuzzy_search_packet_process.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_packet_process.cc $(INCLUDE_PATHS)

fuzzy_search_proto_buf.o : ./fuzzy_search_proto_buf.cc ./fuzzy_search_proto_buf.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./fuzzy_search_proto_buf.cc $(INCLUDE_PATHS)

packet_process.o : ./$(USER_DIR)/net/packet_process.cc ./$(USER_DIR)/net/packet_process.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/net/packet_process.cc $(INCLUDE_PATHS)
	
proto_buf.o : ./$(USER_DIR)/net/proto_buf.cc ./$(USER_DIR)/net/proto_buf.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/net/proto_buf.cc $(INCLUDE_PATHS)

back_infos.o : ./$(USER_DIR)/logic/back_infos.cc ./$(USER_DIR)/logic/back_infos.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/logic/back_infos.cc $(INCLUDE_PATHS)

logic_unit.o : ./$(USER_DIR)/logic/logic_unit.cc ./$(USER_DIR)/logic/logic_unit.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/logic/logic_unit.cc $(INCLUDE_PATHS)
	
token.o : ./$(USER_DIR)/tool/token.cc ./$(USER_DIR)/tool/token.h
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/tool/token.cc $(INCLUDE_PATHS)

$(PLUGIN) :  fuzzy_sentence_view.o token.o fuzzy_search_engine.o fuzzy_search_test.o fuzzy_search_handle.o fuzzy_search_match.o fuzzy_search_parser.o fuzzy_search_init.o  fuzzy_search_logic.o fuzzy_search_factory.o back_infos.o fuzzy_search_packet_process.o\
	fuzzy_search_proto_buf.o packet_process.o proto_buf.o logic_unit.o\
	$(CUSTOM_THIRD_PATH)/dmg_fp/lib/dmg_fp.a $(LIB_DIR)/base/lib/mybase.a $(LIB_DIR)/third_party/lib/libhiredis.a 
	$(CXX) $^ $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -lback_share -lpthread -lexpat -lrt -ldl -lmysqlclient \
	 -o $@
