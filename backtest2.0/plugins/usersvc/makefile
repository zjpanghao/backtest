# Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.


# Where to find user code.

LIB_DIR = ../../../mylib
CORE_DIR = ../../../basecore
USER_DIR = ./../../pub
SO_DIR = ./../../bin/plugins
USER = ./../../plugins

ARITHMETIC=$(USER_DIR)/arithmetic

THIRD_PATH = $(LIB_DIR)/public

CUSTOM_THIRD_PATH = $(LIB_DIR)/third_party

LINK_PATHS = -L./ -L/usr/local/libmemcached-1.0.7/lib/  -L/usr/lib64/mysql

# Flags passed to the preprocessor.
CPPFLAGS += -isystem -shared -fPIC  -D_DB_POOL_ -D_DEBUG -DUSR_LOG_MSG -DPROCESS_WORK

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread -shared -fPIC

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
PLUGIN = $(SO_DIR)/usersvc/user.so
                
INCLUDE_PATHS = -I/usr/local/libmemcached-1.0.7/include \
				-I$(LIB_DIR)\
				-I$(CORE_DIR)\
				-I$(USER)\
				-I$(THIRD_PATH)\
				-I/usr/local/include\
				-I/usr/include/mysql\
				-I$(USER_DIR)\
				-I$(CUSTOM_THIRD_PATH)/hiredis\
				-I$(CUSTOM_THIRD_PATH)\
				-I$(LIB_DIR)/base\
		    -I$(ARITHMETIC)	


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(PLUGIN)

clean :
	rm -f $(PLUGIN)  *.o

delete-temp-file:
	-rm -f ./*.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
#GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
#gtest-all.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

#gtest_main.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

#gtest.a : gtest-all.o
#	$(AR) $(ARFLAGS) $@ $^

#gtest_main.a : gtest-all.o gtest_main.o
#	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

user_init.o : ./user_init.cc ./user_init.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./user_init.cc $(INCLUDE_PATHS) 

user_logic.o : ./user_logic.cc ./user_logic.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./user_logic.cc $(INCLUDE_PATHS)

db_comm.o : ./db_comm.cc ./db_comm.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./db_comm.cc $(INCLUDE_PATHS)

http_data.o :  ./http_data.cc ./http_data.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./http_data.cc $(INCLUDE_PATHS)

login_logic_unit.o :  ./login_logic_unit.cc ./login_logic_unit.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./login_logic_unit.cc $(INCLUDE_PATHS)

logic_unit.o : ./$(USER_DIR)/logic/logic_unit.cc ./$(USER_DIR)/logic/logic_unit.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/logic/logic_unit.cc $(INCLUDE_PATHS)
	
http_packet.o: $(THIRD_PATH)/protocol/http_packet.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/protocol/http_packet.cc $(INCLUDE_PATHS)
	
mig_log.o: $(THIRD_PATH)/log/mig_log.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/log/mig_log.cc $(INCLUDE_PATHS)
	
basictypes.o: $(THIRD_PATH)/basic/basictypes.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/basictypes.cc $(INCLUDE_PATHS)
	
basic_util.o: $(THIRD_PATH)/basic/basic_util.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/basic_util.cc $(INCLUDE_PATHS)
	
config.o: $(THIRD_PATH)/config/config.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/config/config.cc $(INCLUDE_PATHS)
	
md5sum.o:$(THIRD_PATH)/basic/md5sum.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/md5sum.cc $(INCLUDE_PATHS)

radom_in.o:$(THIRD_PATH)/basic/radom_in.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/radom_in.cc $(INCLUDE_PATHS)

tea.o:$(ARITHMETIC)/tea/tea.cc $(ARITHMETIC)/tea/tea.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(ARITHMETIC)/tea/tea.cc $(INCLUDE_PATHS)

basic_util.o: $(THIRD_PATH)/basic/basic_util.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/basic_util.cc $(INCLUDE_PATHS)

get_platform_info.o:./get_platform_info.cc ./get_platform_info.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./get_platform_info.cc $(INCLUDE_PATHS)

packet_process.o : ./$(USER_DIR)/net/packet_process.cc ./$(USER_DIR)/net/packet_process.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/net/packet_process.cc $(INCLUDE_PATHS)

proto_buf.o : ./$(USER_DIR)/net/proto_buf.cc ./$(USER_DIR)/net/proto_buf.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./$(USER_DIR)/net/proto_buf.cc $(INCLUDE_PATHS)
	
login.o:./login.cc ./login.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./login.cc $(INCLUDE_PATHS)

token.o : $(USER_DIR)/tool/token.cc $(USER_DIR)/tool/token.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/tool/token.cc $(INCLUDE_PATHS)

redis_link.o:./redis_link.cc ./redis_link.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./redis_link.cc $(INCLUDE_PATHS)

$(PLUGIN) : user_init.o user_logic.o basic_util.o get_platform_info.o \
	http_packet.o mig_log.o basictypes.o  http_data.o redis_link.o \
    login_logic_unit.o logic_unit.o basic_util.o config.o login.o db_comm.o \
	md5sum.o radom_in.o  tea.o token.o packet_process.o proto_buf.o \
	$(CUSTOM_THIRD_PATH)/dmg_fp/lib/dmg_fp.a $(LIB_DIR)/base/lib/mybase.a $(LIB_DIR)/third_party/lib/libhiredis.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -lpthread -lexpat -lrt -lpthread -ldl -lmysqlclient -lcurl \
	$^ -o $@ -L$(SO_DIR)/../back_share -Wl,-rpath=back_share -lback_share
